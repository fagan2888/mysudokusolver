var should = require('chai').should();
var solver = require('./../src/scripts/modules/solver');

describe('Sudoku Solver', function() {
    it('simple puzzle', function() {
        var board =
            [[5,3,0,0,7,0,0,0,0],
             [6,0,0,1,9,5,0,0,0],
             [0,9,8,0,0,0,0,6,0],
             [8,0,0,0,6,0,0,0,3],
             [4,0,0,8,0,3,0,0,1],
             [7,0,0,0,2,0,0,0,6],
             [0,6,0,0,0,0,2,8,0],
             [0,0,0,4,1,9,0,0,5],
             [0,0,0,0,8,0,0,7,9]];

        var desiredOutput =
            [[5,3,4,6,7,8,9,1,2],
             [6,7,2,1,9,5,3,4,8],
             [1,9,8,3,4,2,5,6,7],
             [8,5,9,7,6,1,4,2,3],
             [4,2,6,8,5,3,7,9,1],
             [7,1,3,9,2,4,8,5,6],
             [9,6,1,5,3,7,2,8,4],
             [2,8,7,4,1,9,6,3,5],
             [3,4,5,2,8,6,1,7,9]];

        solver(board);
        board.should.deep.equal(desiredOutput);
    });

    it('row checker', function() {
        var board =
            [[1,2,3,4,5,6,7,0,0],
             [0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,9,0]];

        var desiredOutput =
             [[1,2,3,4,5,6,7,8,9],
              [0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,9,0]];

        solver(board);
        board.should.deep.equal(desiredOutput);
    });

    it('col checker', function() {
        var board =
            [[1,0,0,0,0,0,0,0,0],
             [2,0,0,0,0,0,0,0,0],
             [3,0,0,0,0,0,0,0,0],
             [4,0,0,0,0,0,0,0,0],
             [5,0,0,0,0,0,0,0,0],
             [6,0,0,0,0,0,0,0,0],
             [7,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,9]];

        var desiredOutput =
            [[1,0,0,0,0,0,0,0,0],
             [2,0,0,0,0,0,0,0,0],
             [3,0,0,0,0,0,0,0,0],
             [4,0,0,0,0,0,0,0,0],
             [5,0,0,0,0,0,0,0,0],
             [6,0,0,0,0,0,0,0,0],
             [7,0,0,0,0,0,0,0,0],
             [9,0,0,0,0,0,0,0,0],
             [8,0,0,0,0,0,0,0,9]];

        solver(board);
        board.should.deep.equal(desiredOutput);
    });

    it('incorrect input', function() {
        var board =
            [[1,1,1,1,1,1,1,1,1],
             [1,1,1,1,1,1,1,1,1],
             [1,1,1,1,1,1,1,1,1],
             [1,1,1,1,1,1,1,1,1],
             [1,1,1,1,1,1,1,1,1],
             [1,1,1,1,1,1,1,1,1],
             [1,1,1,1,1,1,1,1,1],
             [1,1,1,1,1,1,1,1,1],
             [1,1,1,1,1,1,1,1,0]];

        var solved = solver(board);
        solved.should.equal(false);
    });
});
